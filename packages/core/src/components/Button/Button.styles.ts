// packages/core/src/components/Button/Button.styles.ts
/// Zero-dependency button styles using pure SASS-generated classes
/// @fileoverview Button styling without external dependencies

import { cva, type VariantProps } from "../../utils/cn";

/**
 * Button variants using pure SASS-generated classes
 * These classes are generated by our SASS build system
 */
export const buttonVariants = cva(
  // Base classes - generated by SASS
  "mild-button",
  {
    variants: {
      variant: {
        solid: "mild-button--solid",
        outline: "mild-button--outline",
        ghost: "mild-button--ghost",
        link: "mild-button--link",
      },
      size: {
        xs: "mild-button--xs",
        sm: "mild-button--sm",
        md: "mild-button--md",
        lg: "mild-button--lg",
        xl: "mild-button--xl",
      },
      colorScheme: {
        primary: "mild-button--primary",
        secondary: "mild-button--secondary",
        success: "mild-button--success",
        warning: "mild-button--warning",
        danger: "mild-button--danger",
        gray: "mild-button--gray", // Add gray to match ColorScheme type
      },
      fullWidth: {
        true: "mild-button--full-width",
        false: "",
      },
      loading: {
        true: "mild-button--loading",
        false: "",
      },
      disabled: {
        true: "mild-button--disabled",
        false: "",
      },
    },
    compoundVariants: [
      // Link variant doesn't need sizes
      {
        variant: "link",
        size: "xs",
        class: "mild-button--link-xs",
      },
      {
        variant: "link",
        size: "sm",
        class: "mild-button--link-sm",
      },
      {
        variant: "link",
        size: "md",
        class: "mild-button--link-md",
      },
      {
        variant: "link",
        size: "lg",
        class: "mild-button--link-lg",
      },
      {
        variant: "link",
        size: "xl",
        class: "mild-button--link-xl",
      },
    ],
    defaultVariants: {
      variant: "solid",
      size: "md",
      colorScheme: "primary",
      fullWidth: false, // Keep as boolean - the cva function handles conversion
      loading: false, // Keep as boolean - the cva function handles conversion
      disabled: false, // Keep as boolean - the cva function handles conversion
    },
  },
);

export type ButtonVariantProps = VariantProps<typeof buttonVariants>;

/**
 * Button icon variants for consistent icon sizing
 */
export const buttonIconVariants = cva("mild-button__icon", {
  variants: {
    position: {
      left: "mild-button__left-icon",
      right: "mild-button__right-icon",
    },
    size: {
      xs: "mild-button__icon--xs",
      sm: "mild-button__icon--sm",
      md: "mild-button__icon--md",
      lg: "mild-button__icon--lg",
      xl: "mild-button__icon--xl",
    },
  },
  defaultVariants: {
    size: "md",
  },
});

/**
 * Button spinner variants for loading states
 */
export const buttonSpinnerVariants = cva("mild-button__spinner", {
  variants: {
    size: {
      xs: "mild-button__spinner--xs",
      sm: "mild-button__spinner--sm",
      md: "mild-button__spinner--md",
      lg: "mild-button__spinner--lg",
      xl: "mild-button__spinner--xl",
    },
  },
  defaultVariants: {
    size: "md",
  },
});
